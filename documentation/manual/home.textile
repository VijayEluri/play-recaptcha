h1. Recaptcha module for Play!

Integrate challenge-response "reCaptcha":http://www.google.com/recaptcha tests in 5 minutes.

h2. What is a Captcha?

A Captcha is a type of challenge-response test used in computing to ensure that the response is not generated by a computer. Captcha are typically used to fight spam and validate that a human is using the system. 

!http://www.google.com/recaptcha/static/images/smallCaptchaSpaceWithRoughAlpha.png(sample)!

h2. Features

* 5 minutes integration guaranteed
* Industry standard Captcha engine [reCaptcha](http://www.google.com/recaptcha)
* Automatically detects language preference from the "Play Framework":http://www.playframework.org
* Customizable theme, tabindex and language


h2. Prerequisites

The modules requires the recapctha public/private key for your domain.

# Please go to "http://www.google.com/recaptcha":http://www.google.com/recaptcha
# Register and create a site for your domain
# Write down the generated **public** and **private keys**


h2. Installation

There are two ways to deploy this module.

# You can download the zip and unpack it in your play/module folder.
# or, You can simply run *'play install recaptcha-0.9'* and let Play do all the job for you!


h2. How to Use


Well it's kind of easy.
First, add this line in your **conf/application.conf**

<pre>
	module.recaptcha=${play.path}/modules/recaptcha-0.9
</pre>

Now the module offers two integration points: one to display the captcha, the other to validate it.

h4. Generating the captcha

Play being an MVC framework, we need to define a action in the controller and its associated page.
Edit file **app/controller/Application.java** as follows:

<pre>
	public class Application extends Controller {
		public static void register() {
			render();
		}
	}
</pre>

Create a file `app/view/Application/register.html`

<pre>
 #{extends 'main.html' /}
 #{set title:'Test reCaptcha' /}
	#{form @save()} 
        your-other-form-stuff 
        <p>        
             #{crionics.recaptcha publicKey:"YOUR_PUBLIC_KEY", privateKey:"YOUR_PRIVATE_KEY", theme:"red", tabindex:"2"/}  
            <br /> 
            <input type="submit" value="Register me, I am human" /> 
        </p>
	#{/form}
</pre>

h4. Validating the captcha

Edit file *app/controller/Application.java* and add the following:

<pre>
	import com.crionics.recaptcha.Recaptcha;

	public class Application extends Controller {
		public static void save() {

		// ... Do some other form validation...
        	boolean status = Recaptcha.checkAnswer("YOUR_PRIVATE_K", request, params);

        	if (status) {
        	    System.out.println("Captcha answer was entered correctly!");
        	} else {
            	System.out.println("Captcha answer is wrong");
            	register();
        	}
		}
    }
</pre>



h4. Testing the captcha

Start play and launch a browser to "http://localhost:9000/Application/register":http://localhost:9000/Application/register<br/>
Done!


h2. Tag parameters

The *crionics.recaptcha* tag takes the following parameters

*publicKey*: Mandatory field<br/>
*privateKey*: Mandatory field<br/>
*theme*: The theme to use. Possible values are:red (default), white, blackglass, clean<br/>
*tabindex*: Sets a tabindex for the reCAPTCHA text box. If other elements in the form use a tabindex, this should be set so that navigation is easier for the user<br/>
*lang*: A two character country code. By default the module will ask Play to provide the negotiated language. possible values are: en,nl,fr,de,pt,ru,es,tr

See the "reCaptcha documentation":http://code.google.com/apis/recaptcha/docs/customization.html for more details.

h2. Credits

This module is based on the "Recaptcha java library":http://code.google.com/p/recaptcha/downloads/list?q=label:java-Latest
